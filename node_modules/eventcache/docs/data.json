{
    "project": {
        "name": "EventCache API",
        "description": "This small module aims to simplify the binding and unbinding of event listeners by creating distinct event caches.",
        "version": "0.1.6",
        "url": "https://github.com/vanruesc/eventcache"
    },
    "files": {
        "src\\eventcache.js": {
            "name": "src\\eventcache.js",
            "modules": {},
            "classes": {
                "EventCache": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "EventCache": {
            "name": "EventCache",
            "shortname": "EventCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\eventcache.js",
            "line": 203,
            "description": "The Event Cache class is a compilation of\nstatic functions with isolated data structures.",
            "static": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src\\eventcache.js",
            "line": 1,
            "description": "The caches.",
            "itemtype": "property",
            "name": "caches",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "EventCache"
        },
        {
            "file": "src\\eventcache.js",
            "line": 12,
            "description": "Validates the arguments and tries to extract an event signature.",
            "itemtype": "method",
            "name": "extractSignature",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "args",
                    "description": "- The original arguments array from a call to add or remove.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The event signature.",
                "type": "Array"
            },
            "class": "EventCache"
        },
        {
            "file": "src\\eventcache.js",
            "line": 50,
            "description": "Creates a new cache and returns its reference id.",
            "itemtype": "method",
            "name": "createCache",
            "return": {
                "description": "The index of the newly created cache.",
                "type": "Number"
            },
            "class": "EventCache"
        },
        {
            "file": "src\\eventcache.js",
            "line": 59,
            "description": "Creates an event listener and adds its signature to the associated cache.",
            "itemtype": "method",
            "name": "bind",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "- The object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "- The event name.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "- The listener.",
                    "type": "Function"
                },
                {
                    "name": "cache",
                    "description": "- The cache.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "EventCache"
        },
        {
            "file": "src\\eventcache.js",
            "line": 93,
            "description": "Unbinds an event and removes its signature from the associated cache.",
            "itemtype": "method",
            "name": "unbind",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "- The object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "- The event name.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "- The listener.",
                    "type": "Function"
                },
                {
                    "name": "cache",
                    "description": "- The cache.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "EventCache"
        },
        {
            "file": "src\\eventcache.js",
            "line": 138,
            "description": "Removes all event signatures from the given cache\nand releases the respective event listeners.\nCalling flush without specifying a cache will unbind\nand remove all listeners in all caches. Empty caches\nwill then be dropped and can no longer be used.\nOnly the default cache will remain.",
            "itemtype": "method",
            "name": "flush",
            "static": 1,
            "params": [
                {
                    "name": "cache",
                    "description": "- The index of the cache to flush. If not provided, all caches will be flushed.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "EventCache"
        },
        {
            "file": "src\\eventcache.js",
            "line": 184,
            "description": "Provides insight into the internals.",
            "itemtype": "method",
            "name": "status",
            "static": 1,
            "return": {
                "description": "The default cache and all additional caches.",
                "type": "Object"
            },
            "class": "EventCache"
        }
    ],
    "warnings": []
}